<h2>Detalle del Carrito</h2>

{{#if cart}}
    <div class="cart-details-container">
        <h3>ID del Carrito: {{cart._id}}</h3>
        {{#if cart.products.length}}
            <div class="cart-products-grid">
                {{#each cart.products}}
                    <div class="cart-product-card">
                        {{#if product.thumbnail}}
                            <img src="{{product.thumbnail}}" alt="{{product.title}}" class="product-thumbnail">
                        {{else}}
                            <img src="/img/default-product.png" alt="Producto sin imagen" class="product-thumbnail">
                        {{/if}}
                        <h4>{{product.title}}</h4>
                        <p>Precio Unitario: ${{product.price}}</p>
                        <p>Cantidad: {{quantity}}</p>
                        <p>Subtotal: ${{multiply product.price quantity}}</p>
                        <!-- Botón para eliminar un producto del carrito -->
                        <button class="remove-from-cart-btn" data-cart-id="{{../cart._id}}" data-product-id="{{product._id}}">Eliminar</button>
                    </div>
                {{/each}}
            </div>
            <div class="cart-summary">
                <h4>Total del Carrito: $<span id="cart-total">{{calculateCartTotal cart.products}}</span></h4>
                <button id="complete-purchase-btn" data-cart-id="{{cart._id}}">Completar Compra</button>
                <button id="clear-cart-btn" data-cart-id="{{cart._id}}">Vaciar Carrito</button>
            </div>
        {{else}}
            <p>Tu carrito está vacío.</p>
        {{/if}}
    </div>
{{else}}
    <p>No se pudo cargar el carrito o no tienes uno asociado.</p>
    <p><a href="/products">Ver Productos</a></p>
{{/if}}

<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
<script>
    document.addEventListener('DOMContentLoaded', () => {
        const completePurchaseBtn = document.getElementById('complete-purchase-btn');
        const clearCartBtn = document.getElementById('clear-cart-btn');
        const removeButtons = document.querySelectorAll('.remove-from-cart-btn');

        if (completePurchaseBtn) {
            completePurchaseBtn.addEventListener('click', async () => {
                const cartId = completePurchaseBtn.dataset.cartId;
                Swal.fire({
                    title: '¿Estás seguro de completar la compra?',
                    text: "¡No podrás revertir esto!",
                    icon: 'warning',
                    showCancelButton: true,
                    confirmButtonColor: '#3085d6',
                    cancelButtonColor: '#d33',
                    confirmButtonText: 'Sí, ¡comprar!',
                    cancelButtonText: 'Cancelar'
                }).then(async (result) => {
                    if (result.isConfirmed) {
                        try {
                            const response = await fetch(`/api/carts/${cartId}/purchase`, {
                                method: 'POST',
                                headers: {
                                    'Content-Type': 'application/json'
                                }
                            });
                            const data = await response.json();

                            if (response.ok) {
                                Swal.fire(
                                    '¡Compra Realizada!',
                                    data.message || 'Tu compra ha sido procesada exitosamente.',
                                    'success'
                                ).then(() => {
                                    if (data.payload && data.payload.ticket && data.payload.ticket.code) {
                                        window.location.href = `/ticket/${data.payload.ticket.code}`; // Redirigir al detalle del ticket
                                    } else {
                                        window.location.reload(); // Recargar la página del carrito
                                    }
                                });
                            } else {
                                Swal.fire(
                                    'Error en la compra',
                                    data.message || 'No se pudo completar la compra.',
                                    'error'
                                );
                            }
                        } catch (error) {
                            console.error('Error de red al completar la compra:', error);
                            Swal.fire(
                                'Error de Conexión',
                                'No se pudo conectar al servidor para completar la compra.',
                                'error'
                            );
                        }
                    }
                });
            });
        }

        if (clearCartBtn) {
            clearCartBtn.addEventListener('click', async () => {
                const cartId = clearCartBtn.dataset.cartId;
                Swal.fire({
                    title: '¿Estás seguro de vaciar el carrito?',
                    text: "¡Esto eliminará todos los productos de tu carrito!",
                    icon: 'warning',
                    showCancelButton: true,
                    confirmButtonColor: '#3085d6',
                    cancelButtonColor: '#d33',
                    confirmButtonText: 'Sí, ¡vaciar!',
                    cancelButtonText: 'Cancelar'
                }).then(async (result) => {
                    if (result.isConfirmed) {
                        try {
                            const response = await fetch(`/api/carts/${cartId}`, {
                                method: 'DELETE',
                                headers: {
                                    'Content-Type': 'application/json'
                                }
                            });
                            const data = await response.json();

                            if (response.ok) {
                                Swal.fire(
                                    '¡Carrito Vaciado!',
                                    data.message || 'Tu carrito ha sido vaciado exitosamente.',
                                    'success'
                                ).then(() => {
                                    window.location.reload(); // Recargar la página del carrito
                                });
                            } else {
                                Swal.fire(
                                    'Error al vaciar',
                                    data.message || 'No se pudo vaciar el carrito.',
                                    'error'
                                );
                            }
                        } catch (error) {
                            console.error('Error de red al vaciar el carrito:', error);
                            Swal.fire(
                                'Error de Conexión',
                                'No se pudo conectar al servidor para vaciar el carrito.',
                                'error'
                            );
                        }
                    }
                });
            });
        }

        removeButtons.forEach(button => {
            button.addEventListener('click', async (event) => {
                const cartId = event.target.dataset.cartId;
                const productId = event.target.dataset.productId;

                Swal.fire({
                    title: '¿Estás seguro?',
                    text: "¡Este producto será eliminado de tu carrito!",
                    icon: 'warning',
                    showCancelButton: true,
                    confirmButtonColor: '#3085d6',
                    cancelButtonColor: '#d33',
                    confirmButtonText: 'Sí, eliminarlo!',
                    cancelButtonText: 'Cancelar'
                }).then(async (result) => {
                    if (result.isConfirmed) {
                        try {
                            const response = await fetch(`/api/carts/${cartId}/products/${productId}`, {
                                method: 'DELETE',
                                headers: {
                                    'Content-Type': 'application/json'
                                }
                            });
                            const data = await response.json();

                            if (response.ok) {
                                Swal.fire(
                                    '¡Eliminado!',
                                    data.message || 'El producto ha sido eliminado de tu carrito.',
                                    'success'
                                ).then(() => {
                                    window.location.reload(); // Recargar la página del carrito
                                });
                            } else {
                                Swal.fire(
                                    'Error al eliminar',
                                    data.message || 'No se pudo eliminar el producto del carrito.',
                                    'error'
                                );
                            }
                        } catch (error) {
                            console.error('Error de red al eliminar producto:', error);
                            Swal.fire(
                                'Error de Conexión',
                                'No se pudo conectar al servidor para eliminar el producto.',
                                'error'
                            );
                        }
                    }
                });
            });
        });
    });
</script>